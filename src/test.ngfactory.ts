/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
import * as import0 from 'angular2/src/core/linker/debug_context';
import * as import1 from 'angular2/src/core/render/api';
import * as import2 from 'angular2/src/core/linker/view';
import * as import3 from './test';
import * as import4 from 'angular2/src/core/linker/view_utils';
import * as import5 from 'angular2/src/core/di/injector';
import * as import6 from 'angular2/src/core/linker/element';
import * as import7 from 'angular2/src/core/linker/view_type';
import * as import8 from 'angular2/src/core/change_detection/change_detection';
import * as import9 from 'angular2/src/core/metadata/view';
import * as import10 from 'angular2/src/core/linker/component_factory';
const styles_TestComponent:any[] = [];
const nodeDebugInfos_TestComponent0:import0.StaticNodeDebugInfo[] = [
  new import0.StaticNodeDebugInfo([],null,{}),
  new import0.StaticNodeDebugInfo([],null,{}),
  new import0.StaticNodeDebugInfo([],null,{}),
  new import0.StaticNodeDebugInfo([],null,{})
]
;
var renderType_TestComponent:import1.RenderComponentType = null;
class _View_TestComponent0 extends import2.AppView<import3.TestComponent> {
  private _text_0: any;
  private _el_1: any;
  private _text_2: any;
  private _text_3: any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import6.AppElement) {
    super(_View_TestComponent0,renderType_TestComponent,import7.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import8.ChangeDetectionStrategy.CheckAlways,nodeDebugInfos_TestComponent0);
  }
  createInternal(rootSelector:string):import6.AppElement {
    const parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n	  ',this.debug(0,0,0));
    this._el_1 = this.renderer.createElement(parentRenderNode,'div',this.debug(1,1,3));
    this._text_2 = this.renderer.createText(this._el_1,'hello child',this.debug(2,1,8));
    this._text_3 = this.renderer.createText(parentRenderNode,'\n	',this.debug(3,1,25));
    this.init([],[
      this._text_0,
      this._el_1,
      this._text_2,
      this._text_3
    ]
    ,[],[]);
    return null;
  }
}
export function viewFactory_TestComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import6.AppElement):import2.AppView<import3.TestComponent> {
  if ((renderType_TestComponent === null)) { (renderType_TestComponent = viewUtils.createRenderComponentType('/Users/robwormald/Dev/demos/ng2-compiler-test2/src/test.ts',0,import9.ViewEncapsulation.None,styles_TestComponent)); }
  return new _View_TestComponent0(viewUtils,parentInjector,declarationEl);
}
const styles_TestComponent_Host:any[] = [];
const nodeDebugInfos_TestComponent_Host0:import0.StaticNodeDebugInfo[] = [new import0.StaticNodeDebugInfo([import3.TestComponent],import3.TestComponent,{})];
var renderType_TestComponent_Host:import1.RenderComponentType = null;
class _View_TestComponent_Host0 extends import2.AppView<any> {
  private _el_0: any;
  private _appEl_0:import6.AppElement;
  private _TestComponent_0_4:import3.TestComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import6.AppElement) {
    super(_View_TestComponent_Host0,renderType_TestComponent_Host,import7.ViewType.HOST,viewUtils,parentInjector,declarationEl,import8.ChangeDetectionStrategy.CheckAlways,nodeDebugInfos_TestComponent_Host0);
  }
  createInternal(rootSelector:string):import6.AppElement {
    this._el_0 = this.selectOrCreateHostElement('test-component',rootSelector,this.debug(0,0,0));
    this._appEl_0 = new import6.AppElement(0,null,this,this._el_0);
    var compView_0 = viewFactory_TestComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._TestComponent_0_4 = new import3.TestComponent();
    this._appEl_0.initComponent(this._TestComponent_0_4,[],compView_0);
    compView_0.create(this._TestComponent_0_4,this.projectableNodes,null);
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.TestComponent) && (0 === requestNodeIndex))) { return this._TestComponent_0_4; }
    return notFoundResult;
  }
}
function viewFactory_TestComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import6.AppElement):import2.AppView<any> {
  if ((renderType_TestComponent_Host === null)) { (renderType_TestComponent_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.Emulated,styles_TestComponent_Host)); }
  return new _View_TestComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const TestComponentNgFactory:import10.ComponentFactory = new import10.ComponentFactory('test-component',viewFactory_TestComponent_Host0,import3.TestComponent);