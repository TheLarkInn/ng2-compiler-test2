/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
import * as import0 from '@angular/core/src/linker/debug_context';
import * as import1 from '@angular/core/src/linker/template_ref';
import * as import2 from '@angular/common/src/directives/ng_if';
import * as import3 from '@angular/core/src/render/api';
import * as import4 from '@angular/core/src/linker/view';
import * as import5 from './test';
import * as import6 from '@angular/core/src/linker/element';
import * as import7 from '@angular/core/src/linker/view_utils';
import * as import8 from '@angular/core/src/di/injector';
import * as import9 from '@angular/core/src/linker/view_type';
import * as import10 from '@angular/core/src/change_detection/change_detection';
import * as import11 from '@angular/core/src/linker/view_container_ref';
import * as import12 from '@angular/core/src/linker/template_ref';
import * as import13 from '@angular/core/src/metadata/view';
import * as import14 from '@angular/core/src/linker/component_factory';
const styles_TestComponent:any[] = [];
const nodeDebugInfos_TestComponent0:import0.StaticNodeDebugInfo[] = [
  new import0.StaticNodeDebugInfo([],null,{}),
  new import0.StaticNodeDebugInfo([
    import1.TemplateRef,
    import2.NgIf
  ]
  ,null,{}),
  new import0.StaticNodeDebugInfo([],null,{})
]
;
var renderType_TestComponent:import3.RenderComponentType = null;
class _View_TestComponent0 extends import4.DebugAppView<import5.TestComponent> {
  _text_0: any;
  _anchor_1: any;
  private _appEl_1:import6.AppElement;
  _TemplateRef_1_4:any;
  _NgIf_1_5:import2.NgIf;
  _text_2: any;
  private _expr_0: any;
  constructor(viewUtils:import7.ViewUtils,parentInjector:import8.Injector,declarationEl:import6.AppElement) {
    super(_View_TestComponent0,renderType_TestComponent,import9.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import10.ChangeDetectionStrategy.CheckAlways,nodeDebugInfos_TestComponent0);
  }
  createInternal(rootSelector:string):import6.AppElement {
    const parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n	  ',this.debug(0,0,0));
    this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode,this.debug(1,1,3));
    this._appEl_1 = new import6.AppElement(1,null,this,this._anchor_1);
    this._TemplateRef_1_4 = new import1.TemplateRef_(this._appEl_1,viewFactory_TestComponent1);
    this._NgIf_1_5 = new import2.NgIf(this.parentInjector.get(import11.ViewContainerRef),this.parentInjector.get(import12.TemplateRef));
    this._text_2 = this.renderer.createText(parentRenderNode,'\n	',this.debug(2,1,38));
    this._expr_0 = import10.uninitialized;
    this.init([],[
      this._text_0,
      this._anchor_1,
      this._text_2
    ]
    ,[],[]);
    return null;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import1.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_4; }
    if (((token === import2.NgIf) && (1 === requestNodeIndex))) { return this._NgIf_1_5; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(1,1,8);
    const currVal_0 = this.context.show;
    if (import7.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._NgIf_1_5.ngIf = currVal_0;
      this.renderer.setBindingDebugInfo(this._anchor_1,'ng-reflect-ng-if',((currVal_0 == null)? null: currVal_0.toString()));
      this._expr_0 = currVal_0;
    }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_TestComponent0(viewUtils:import7.ViewUtils,parentInjector:import8.Injector,declarationEl:import6.AppElement):import4.AppView<import5.TestComponent> {
  if ((renderType_TestComponent === null)) { (renderType_TestComponent = viewUtils.createRenderComponentType('/Users/robwormald/Dev/demos/ng2-compiler-test2/src/test.ts class TestComponent - inline template',0,import13.ViewEncapsulation.None,styles_TestComponent)); }
  return new _View_TestComponent0(viewUtils,parentInjector,declarationEl);
}
const nodeDebugInfos_TestComponent1:import0.StaticNodeDebugInfo[] = [
  new import0.StaticNodeDebugInfo([],null,{}),
  new import0.StaticNodeDebugInfo([],null,{})
]
;
class _View_TestComponent1 extends import4.DebugAppView<any> {
  _el_0: any;
  _text_1: any;
  constructor(viewUtils:import7.ViewUtils,parentInjector:import8.Injector,declarationEl:import6.AppElement) {
    super(_View_TestComponent1,renderType_TestComponent,import9.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import10.ChangeDetectionStrategy.CheckAlways,nodeDebugInfos_TestComponent1);
  }
  createInternal(rootSelector:string):import6.AppElement {
    this._el_0 = this.renderer.createElement(null,'div',this.debug(0,1,3));
    this._text_1 = this.renderer.createText(this._el_0,'hello child',this.debug(1,1,21));
    this.init([].concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,[],[]);
    return null;
  }
}
function viewFactory_TestComponent1(viewUtils:import7.ViewUtils,parentInjector:import8.Injector,declarationEl:import6.AppElement):import4.AppView<any> {
  return new _View_TestComponent1(viewUtils,parentInjector,declarationEl);
}
const styles_TestComponent_Host:any[] = [];
const nodeDebugInfos_TestComponent_Host0:import0.StaticNodeDebugInfo[] = [new import0.StaticNodeDebugInfo([import5.TestComponent],import5.TestComponent,{})];
var renderType_TestComponent_Host:import3.RenderComponentType = null;
class _View_TestComponent_Host0 extends import4.DebugAppView<any> {
  _el_0: any;
  private _appEl_0:import6.AppElement;
  _TestComponent_0_4:import5.TestComponent;
  constructor(viewUtils:import7.ViewUtils,parentInjector:import8.Injector,declarationEl:import6.AppElement) {
    super(_View_TestComponent_Host0,renderType_TestComponent_Host,import9.ViewType.HOST,viewUtils,parentInjector,declarationEl,import10.ChangeDetectionStrategy.CheckAlways,nodeDebugInfos_TestComponent_Host0);
  }
  createInternal(rootSelector:string):import6.AppElement {
    this._el_0 = this.selectOrCreateHostElement('test-component',rootSelector,this.debug(0,0,0));
    this._appEl_0 = new import6.AppElement(0,null,this,this._el_0);
    var compView_0 = viewFactory_TestComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._TestComponent_0_4 = new import5.TestComponent();
    this._appEl_0.initComponent(this._TestComponent_0_4,[],compView_0);
    compView_0.create(this._TestComponent_0_4,this.projectableNodes,null);
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import5.TestComponent) && (0 === requestNodeIndex))) { return this._TestComponent_0_4; }
    return notFoundResult;
  }
}
function viewFactory_TestComponent_Host0(viewUtils:import7.ViewUtils,parentInjector:import8.Injector,declarationEl:import6.AppElement):import4.AppView<any> {
  if ((renderType_TestComponent_Host === null)) { (renderType_TestComponent_Host = viewUtils.createRenderComponentType('',0,import13.ViewEncapsulation.Emulated,styles_TestComponent_Host)); }
  return new _View_TestComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const TestComponentNgFactory:import14.ComponentFactory<import5.TestComponent> = new import14.ComponentFactory<import5.TestComponent>('test-component',viewFactory_TestComponent_Host0,import5.TestComponent);